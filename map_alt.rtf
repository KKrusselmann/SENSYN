{\rtf1\ansi\ansicpg1252\cocoartf2759
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fnil\fcharset0 Menlo-Regular;}
{\colortbl;\red255\green255\blue255;\red193\green193\blue193;\red24\green24\blue24;\red140\green211\blue254;
\red202\green202\blue202;\red67\green192\blue160;\red194\green126\blue101;\red167\green197\blue152;\red89\green138\blue67;
\red212\green214\blue154;\red183\green111\blue179;\red70\green137\blue204;}
{\*\expandedcolortbl;;\cssrgb\c80000\c80000\c80000;\cssrgb\c12157\c12157\c12157;\cssrgb\c61176\c86275\c99608;
\cssrgb\c83137\c83137\c83137;\cssrgb\c30588\c78824\c69020;\cssrgb\c80784\c56863\c47059;\cssrgb\c70980\c80784\c65882;\cssrgb\c41569\c60000\c33333;
\cssrgb\c86275\c86275\c66667;\cssrgb\c77255\c52549\c75294;\cssrgb\c33725\c61176\c83922;}
\paperw11900\paperh16840\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\deftab720
\pard\pardeftab720\partightenfactor0

\f0\fs24 \cf2 \cb3 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2     \cf4 \strokec4 regions_data\cf2 \strokec2  \cf5 \strokec5 =\cf2 \strokec2  \cf6 \strokec6 pd\cf2 \strokec2 .\cf6 \strokec6 DataFrame\cf2 \strokec2 (\{\cb1 \
\cb3     \cf7 \strokec7 'Region'\cf2 \strokec2 : [\cf7 \strokec7 'Groningen'\cf2 \strokec2 , \cf7 \strokec7 'Friesland'\cf2 \strokec2 , \cf7 \strokec7 'Drenthe'\cf2 \strokec2 , \cf7 \strokec7 'Overijssel'\cf2 \strokec2 , \cf7 \strokec7 'Flevoland'\cf2 \strokec2 , \cf7 \strokec7 'Zeeland'\cf2 \strokec2 , \cf7 \strokec7 'North Holland'\cf2 \strokec2 , \cf7 \strokec7 'South Holland'\cf2 \strokec2 , \cf7 \strokec7 'Utrecht'\cf2 \strokec2 , \cf7 \strokec7 'Gelderland'\cf2 \strokec2 , \cf7 \strokec7 'North Brabant'\cf2 \strokec2 , \cf7 \strokec7 'Limburg'\cf2 \strokec2 ],\cb1 \
\cb3     \cf7 \strokec7 'Homicide Rate'\cf2 \strokec2 : [\cf8 \strokec8 0.48\cf2 \strokec2 , \cf8 \strokec8 0.62\cf2 \strokec2 , \cf8 \strokec8 0.53\cf2 \strokec2 , \cf8 \strokec8 0.53\cf2 \strokec2 , \cf8 \strokec8 0.75\cf2 \strokec2 , \cf8 \strokec8 0.71\cf2 \strokec2 , \cf8 \strokec8 0.94\cf2 \strokec2 , \cf8 \strokec8 0.78\cf2 \strokec2 , \cf8 \strokec8 0.62\cf2 \strokec2 , \cf8 \strokec8 0.45\cf2 \strokec2 , \cf8 \strokec8 0.78\cf2 \strokec2 , \cf8 \strokec8 0.82\cf2 \strokec2 ]\cb1 \
\cb3 \})\cb1 \
\
\pard\pardeftab720\partightenfactor0
\cf9 \cb3 \strokec9 # Data for cities\cf2 \cb1 \strokec2 \
\pard\pardeftab720\partightenfactor0
\cf2 \cb3     \cf4 \strokec4 cities_data\cf2 \strokec2  \cf5 \strokec5 =\cf2 \strokec2  \cf6 \strokec6 pd\cf2 \strokec2 .\cf6 \strokec6 DataFrame\cf2 \strokec2 (\{\cb1 \
\cb3     \cf7 \strokec7 'City'\cf2 \strokec2 : [\cf7 \strokec7 'Amsterdam'\cf2 \strokec2 , \cf7 \strokec7 'Rotterdam'\cf2 \strokec2 , \cf7 \strokec7 'The Hague'\cf2 \strokec2 , \cf7 \strokec7 'Utrecht'\cf2 \strokec2 ],\cb1 \
\cb3     \cf7 \strokec7 'Latitude'\cf2 \strokec2 : [\cf8 \strokec8 52.3676\cf2 \strokec2 , \cf8 \strokec8 51.9225\cf2 \strokec2 , \cf8 \strokec8 52.0705\cf2 \strokec2 , \cf8 \strokec8 52.0907\cf2 \strokec2 ],\cb1 \
\cb3     \cf7 \strokec7 'Longitude'\cf2 \strokec2 : [\cf8 \strokec8 4.9041\cf2 \strokec2 , \cf8 \strokec8 4.4792\cf2 \strokec2 , \cf8 \strokec8 4.3007\cf2 \strokec2 , \cf8 \strokec8 5.1214\cf2 \strokec2 ],\cb1 \
\cb3     \cf7 \strokec7 'Homicide Rate'\cf2 \strokec2 : [\cf8 \strokec8 1.99\cf2 \strokec2 , \cf8 \strokec8 1.8\cf2 \strokec2 , \cf8 \strokec8 1.2\cf2 \strokec2 , \cf8 \strokec8 0.94\cf2 \strokec2 ]\cb1 \
\cb3 \})\cb1 \
\
\cb3     \cf4 \strokec4 geojson_path\cf2 \strokec2  \cf5 \strokec5 =\cf2 \strokec2  \cf7 \strokec7 'WebApp/Visuals/netherlands_.geojson'\cf2 \cb1 \strokec2 \
\cb3     \cf4 \strokec4 gdf\cf2 \strokec2  \cf5 \strokec5 =\cf2 \strokec2  \cf6 \strokec6 gpd\cf2 \strokec2 .read_file(\cf4 \strokec4 geojson_path\cf2 \strokec2 )\cb1 \
\
\cb3     \cf4 \strokec4 regions_data\cf2 \strokec2 [\cf7 \strokec7 'Region'\cf2 \strokec2 ] \cf5 \strokec5 =\cf2 \strokec2  \cf4 \strokec4 regions_data\cf2 \strokec2 [\cf7 \strokec7 'Region'\cf2 \strokec2 ].\cf10 \strokec10 astype\cf2 \strokec2 (\cf6 \strokec6 str\cf2 \strokec2 )\cb1 \
\cb3     \cf4 \strokec4 gdf\cf2 \strokec2 [\cf7 \strokec7 'name'\cf2 \strokec2 ] \cf5 \strokec5 =\cf2 \strokec2  \cf4 \strokec4 gdf\cf2 \strokec2 [\cf7 \strokec7 'name'\cf2 \strokec2 ].astype(\cf6 \strokec6 str\cf2 \strokec2 )\cb1 \
\
\cb3     \cf4 \strokec4 gdf\cf2 \strokec2  \cf5 \strokec5 =\cf2 \strokec2  \cf4 \strokec4 gdf\cf2 \strokec2 .merge(\cf4 \strokec4 regions_data\cf2 \strokec2 , \cf4 \strokec4 left_on\cf5 \strokec5 =\cf7 \strokec7 'name'\cf2 \strokec2 , \cf4 \strokec4 right_on\cf5 \strokec5 =\cf7 \strokec7 'Region'\cf2 \strokec2 )\cb1 \
\
\cb3     \cf4 \strokec4 m\cf2 \strokec2  \cf5 \strokec5 =\cf2 \strokec2  \cf6 \strokec6 folium\cf2 \strokec2 .\cf6 \strokec6 Map\cf2 \strokec2 (\cf4 \strokec4 location\cf5 \strokec5 =\cf2 \strokec2 [\cf8 \strokec8 52.1326\cf2 \strokec2 , \cf8 \strokec8 5.2913\cf2 \strokec2 ], \cf4 \strokec4 zoom_start\cf5 \strokec5 =\cf8 \strokec8 7\cf2 \strokec2 )\cb1 \
\
\cb3     \cf6 \strokec6 Choropleth\cf2 \strokec2 (\cb1 \
\cb3         \cf4 \strokec4 geo_data\cf5 \strokec5 =\cf4 \strokec4 gdf\cf2 \strokec2 ,\cb1 \
\cb3         \cf4 \strokec4 data\cf5 \strokec5 =\cf4 \strokec4 gdf\cf2 \strokec2 ,\cb1 \
\cb3         \cf4 \strokec4 columns\cf5 \strokec5 =\cf2 \strokec2 [\cf7 \strokec7 'Region'\cf2 \strokec2 , \cf7 \strokec7 'Homicide Rate'\cf2 \strokec2 ],\cb1 \
\cb3         \cf4 \strokec4 key_on\cf5 \strokec5 =\cf7 \strokec7 'features.properties.prov_name'\cf2 \strokec2 ,\cb1 \
\cb3         \cf4 \strokec4 fill_color\cf5 \strokec5 =\cf7 \strokec7 'YlOrRd'\cf2 \strokec2 ,\cb1 \
\cb3         \cf4 \strokec4 fill_opacity\cf5 \strokec5 =\cf8 \strokec8 1.0\cf2 \strokec2 ,\cb1 \
\cb3         \cf4 \strokec4 line_opacity\cf5 \strokec5 =\cf8 \strokec8 0.2\cf2 \strokec2 ,\cb1 \
\cb3         \cf4 \strokec4 legend_name\cf5 \strokec5 =\cf7 \strokec7 'Homicide Rate per Region'\cf2 \cb1 \strokec2 \
\cb3     ).add_to(\cf4 \strokec4 m\cf2 \strokec2 )\cb1 \
\
\cb3     \cf9 \strokec9 # Add CircleMarkers for the cities with size based on homicide rate\cf2 \cb1 \strokec2 \
\cb3     \cf11 \strokec11 for\cf2 \strokec2  \cf4 \strokec4 _\cf2 \strokec2 , \cf4 \strokec4 row\cf2 \strokec2  \cf11 \strokec11 in\cf2 \strokec2  \cf4 \strokec4 cities_data\cf2 \strokec2 .\cf10 \strokec10 iterrows\cf2 \strokec2 ():\cb1 \
\cb3         \cf6 \strokec6 CircleMarker\cf2 \strokec2 (\cb1 \
\cb3             \cf4 \strokec4 location\cf5 \strokec5 =\cf2 \strokec2 [\cf4 \strokec4 row\cf2 \strokec2 [\cf7 \strokec7 'Latitude'\cf2 \strokec2 ], \cf4 \strokec4 row\cf2 \strokec2 [\cf7 \strokec7 'Longitude'\cf2 \strokec2 ]],\cb1 \
\cb3             \cf4 \strokec4 radius\cf5 \strokec5 =\cf4 \strokec4 row\cf2 \strokec2 [\cf7 \strokec7 'Homicide Rate'\cf2 \strokec2 ] \cf5 \strokec5 *\cf2 \strokec2  \cf8 \strokec8 2\cf2 \strokec2 ,  \cf9 \strokec9 # Adjust size multiplier as needed\cf2 \cb1 \strokec2 \
\cb3             \cf4 \strokec4 popup\cf5 \strokec5 =\cf12 \strokec12 f\cf7 \strokec7 "\cf12 \strokec12 \{\cf4 \strokec4 row\cf2 \strokec2 [\cf7 \strokec7 'City'\cf2 \strokec2 ]\cf12 \strokec12 \}\cf7 \strokec7 : \cf12 \strokec12 \{\cf4 \strokec4 row\cf2 \strokec2 [\cf7 \strokec7 'Homicide Rate'\cf2 \strokec2 ]\cf12 \strokec12 \}\cf7 \strokec7 "\cf2 \strokec2 ,\cb1 \
\cb3             \cf4 \strokec4 color\cf5 \strokec5 =\cf7 \strokec7 'blue'\cf2 \strokec2 ,\cb1 \
\cb3             \cf4 \strokec4 fill\cf5 \strokec5 =\cf12 \strokec12 True\cf2 \strokec2 ,\cb1 \
\cb3             \cf4 \strokec4 fill_color\cf5 \strokec5 =\cf7 \strokec7 'blue'\cf2 \cb1 \strokec2 \
\cb3         ).add_to(\cf4 \strokec4 m\cf2 \strokec2 )\cb1 \
}